{"dependencies":[{"id":"dart.core","name":"dart:core","children":[{"id":"Object","name":"Object","children":[{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"==1()","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","line":"29"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString0()","name":"toString","kind":"method","comment":"\nReturns a string representation of this object.\n","line":"48"},{"id":"noSuchMethod1()","name":"noSuchMethod","children":[{"ref":{"name":"InvocationMirror","refId":"dart.core/InvocationMirror"},"id":"invocation","name":"invocation","kind":"param"}],"kind":"method","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [InvocationMirror].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","line":"60"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"hashCode","name":"hashCode","kind":"property","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"43"},{"ref":{"name":"Type","refId":"dart.core/Type"},"id":"runtimeType","name":"runtimeType","kind":"property","comment":"\nA representation of the runtime type of the object.\n","line":"65"},{"id":"Object0()","name":"Object","kind":"constructor","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"18"}],"uri":"dart-sdk//lib/core/object.dart","kind":"class","comment":"\nEverything in Dart is an [Object].\n","line":"10"}],"uri":"dart-sdk//lib/core/core.dart","kind":"library","line":"5"}],"id":"server","children":[{"interfaces":[{"name":"RouteServer","refId":"server/RouteServer"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"_RouteServerImpl","name":"_RouteServerImpl","children":[{"id":"delete2()","name":"delete","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"path","name":"path","kind":"param"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"id":"handler","name":"handler","children":[{"returnType":{"name":"void","refId":"void"},"id":"Function","name":"Function","children":[{"ref":{"name":"Request","refId":"request/Request"},"id":"req","name":"req","uri":"Route/lib/src/server_impl.dart","kind":"param","line":"18"},{"ref":{"name":"Response","refId":"request/Response"},"id":"res","name":"res","uri":"Route/lib/src/server_impl.dart","kind":"param","line":"18"}],"uri":"dart-sdk//lib/core/function.dart","kind":"functiontype","line":"13"}],"kind":"param"}],"kind":"method","line":"18"},{"id":"get2()","name":"get","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"path","name":"path","kind":"param"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"id":"handler","name":"handler","children":[{"returnType":{"name":"void","refId":"void"},"id":"Function","name":"Function","children":[{"ref":{"name":"Request","refId":"request/Request"},"id":"req","name":"req","uri":"Route/lib/src/server_impl.dart","kind":"param","line":"21"},{"ref":{"name":"Response","refId":"request/Response"},"id":"res","name":"res","uri":"Route/lib/src/server_impl.dart","kind":"param","line":"21"}],"uri":"dart-sdk//lib/core/function.dart","kind":"functiontype","line":"13"}],"kind":"param"}],"kind":"method","line":"21"},{"id":"post2()","name":"post","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"path","name":"path","kind":"param"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"id":"handler","name":"handler","children":[{"returnType":{"name":"void","refId":"void"},"id":"Function","name":"Function","children":[{"ref":{"name":"Request","refId":"request/Request"},"id":"req","name":"req","uri":"Route/lib/src/server_impl.dart","kind":"param","line":"24"},{"ref":{"name":"Response","refId":"request/Response"},"id":"res","name":"res","uri":"Route/lib/src/server_impl.dart","kind":"param","line":"24"}],"uri":"dart-sdk//lib/core/function.dart","kind":"functiontype","line":"13"}],"kind":"param"}],"kind":"method","line":"24"},{"id":"put2()","name":"put","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"path","name":"path","kind":"param"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"id":"handler","name":"handler","children":[{"returnType":{"name":"void","refId":"void"},"id":"Function","name":"Function","children":[{"ref":{"name":"Request","refId":"request/Request"},"id":"req","name":"req","uri":"Route/lib/src/server_impl.dart","kind":"param","line":"27"},{"ref":{"name":"Response","refId":"request/Response"},"id":"res","name":"res","uri":"Route/lib/src/server_impl.dart","kind":"param","line":"27"}],"uri":"dart-sdk//lib/core/function.dart","kind":"functiontype","line":"13"}],"kind":"param"}],"kind":"method","line":"27"},{"id":"_fetchRoute3()","name":"_fetchRoute","children":[{"ref":{"name":"RouteNode","refId":"route/RouteNode"},"id":"routeTree","name":"routeTree","kind":"param"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"path","name":"path","kind":"param"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"id":"handler","name":"handler","children":[{"returnType":{"name":"void","refId":"void"},"id":"Function","name":"Function","children":[{"ref":{"name":"Request","refId":"request/Request"},"id":"req","name":"req","uri":"Route/lib/src/server_impl.dart","kind":"param","line":"30"},{"ref":{"name":"Response","refId":"request/Response"},"id":"res","name":"res","uri":"Route/lib/src/server_impl.dart","kind":"param","line":"30"}],"uri":"dart-sdk//lib/core/function.dart","kind":"functiontype","line":"13"}],"kind":"param"}],"kind":"method","isPrivate":true,"line":"30"},{"returnType":{"name":"void","refId":"void"},"id":"route1()","name":"route","children":[{"ref":{"name":"HttpRequest","refId":"dart.io/HttpRequest"},"id":"httpRequest","name":"httpRequest","kind":"param"}],"kind":"method","line":"43"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RouteServer","refId":"server/RouteServer"}]},"id":"run0()","name":"run","kind":"method","line":"78"},{"id":"close0()","name":"close","kind":"method","line":"94"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isRunning","name":"isRunning","kind":"property","line":"11"},{"ref":{"name":"HttpServer","refId":"dart.io/HttpServer"},"id":"httpServer","name":"httpServer","kind":"variable","line":"4"},{"ref":{"name":"RouteNode","refId":"route/RouteNode"},"id":"_deleteTree","name":"_deleteTree","kind":"variable","isPrivate":true,"line":"5"},{"ref":{"name":"RouteNode","refId":"route/RouteNode"},"id":"_getTree","name":"_getTree","kind":"variable","isPrivate":true,"line":"6"},{"ref":{"name":"RouteNode","refId":"route/RouteNode"},"id":"_postTree","name":"_postTree","kind":"variable","isPrivate":true,"line":"7"},{"ref":{"name":"RouteNode","refId":"route/RouteNode"},"id":"_putTree","name":"_putTree","kind":"variable","isPrivate":true,"line":"8"},{"ref":{"name":"NotFoundHandler","refId":"server/NotFoundHandler"},"id":"notFoundHandler","name":"notFoundHandler","kind":"variable","line":"9"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"_running","name":"_running","kind":"variable","isPrivate":true,"line":"10"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"address","name":"address","kind":"variable","line":"12"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"port","name":"port","kind":"variable","line":"13"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"backlog","name":"backlog","kind":"variable","line":"14"},{"id":"_RouteServerImpl3()","name":"_RouteServerImpl","children":[{"initializedField":{"name":"address","refId":"server/_RouteServerImpl/address"},"ref":{"name":"String","refId":"dart.core/String"},"id":"address","name":"address","kind":"param"},{"initializedField":{"name":"port","refId":"server/_RouteServerImpl/port"},"ref":{"name":"int","refId":"dart.core/int"},"id":"port","name":"port","kind":"param"},{"initializedField":{"name":"backlog","refId":"server/_RouteServerImpl/backlog"},"ref":{"name":"int","refId":"dart.core/int"},"id":"backlog","name":"backlog","kind":"param"}],"kind":"constructor","line":"16"}],"uri":"Route/lib/src/server_impl.dart","kind":"class","isPrivate":true,"line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"id":"RouteServer","name":"RouteServer","children":[{"id":"delete2()","name":"delete","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"path","name":"path","kind":"param"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"id":"handler","name":"handler","children":[{"returnType":{"name":"void","refId":"void"},"id":"Function","name":"Function","children":[{"ref":{"name":"Request","refId":"request/Request"},"id":"req","name":"req","uri":"Route/lib/src/server.dart","kind":"param","line":"46"},{"ref":{"name":"Response","refId":"request/Response"},"id":"res","name":"res","uri":"Route/lib/src/server.dart","kind":"param","line":"46"}],"uri":"dart-sdk//lib/core/function.dart","kind":"functiontype","line":"13"}],"kind":"param"}],"kind":"method","comment":"\nCreates a new DELETE route and returns it's stream.\n\nCreates a new DELETE route and returns it's stream. An optional handler may be passed. If this handler is passed,\nit will be used to listen to the stream and the subscription will be returned instead.\n","line":"46"},{"id":"get2()","name":"get","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"path","name":"path","kind":"param"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"id":"handler","name":"handler","children":[{"returnType":{"name":"void","refId":"void"},"id":"Function","name":"Function","children":[{"ref":{"name":"Request","refId":"request/Request"},"id":"req","name":"req","uri":"Route/lib/src/server.dart","kind":"param","line":"54"},{"ref":{"name":"Response","refId":"request/Response"},"id":"res","name":"res","uri":"Route/lib/src/server.dart","kind":"param","line":"54"}],"uri":"dart-sdk//lib/core/function.dart","kind":"functiontype","line":"13"}],"kind":"param"}],"kind":"method","comment":"\nCreates a new GET route and returns it's stream.\n\nCreates a new GET route and returns it's stream. An optional handler may be passed. If this handler is passed,\nit will be used to listen to the stream and the subscription will be returned instead.\n","line":"54"},{"id":"post2()","name":"post","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"path","name":"path","kind":"param"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"id":"handler","name":"handler","children":[{"returnType":{"name":"void","refId":"void"},"id":"Function","name":"Function","children":[{"ref":{"name":"Request","refId":"request/Request"},"id":"req","name":"req","uri":"Route/lib/src/server.dart","kind":"param","line":"62"},{"ref":{"name":"Response","refId":"request/Response"},"id":"res","name":"res","uri":"Route/lib/src/server.dart","kind":"param","line":"62"}],"uri":"dart-sdk//lib/core/function.dart","kind":"functiontype","line":"13"}],"kind":"param"}],"kind":"method","comment":"\nCreates a new POST route and returns it's stream.\n\nCreates a new POST route and returns it's stream. An optional handler may be passed. If this handler is passed,\nit will be used to listen to the stream and the subscription will be returned instead.\n","line":"62"},{"id":"put2()","name":"put","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"path","name":"path","kind":"param"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"id":"handler","name":"handler","children":[{"returnType":{"name":"void","refId":"void"},"id":"Function","name":"Function","children":[{"ref":{"name":"Request","refId":"request/Request"},"id":"req","name":"req","uri":"Route/lib/src/server.dart","kind":"param","line":"70"},{"ref":{"name":"Response","refId":"request/Response"},"id":"res","name":"res","uri":"Route/lib/src/server.dart","kind":"param","line":"70"}],"uri":"dart-sdk//lib/core/function.dart","kind":"functiontype","line":"13"}],"kind":"param"}],"kind":"method","comment":"\nCreates a new PUT route and returns it's stream.\n\nCreates a new PUT route and returns it's stream. An optional handler may be passed. If this handler is passed,\nit will be used to listen to the stream and the subscription will be returned instead.\n","line":"70"},{"returnType":{"name":"void","refId":"void"},"id":"route1()","name":"route","children":[{"ref":{"name":"HttpRequest","refId":"dart.io/HttpRequest"},"id":"httpRequest","name":"httpRequest","kind":"param"}],"kind":"method","comment":"\nTakes a request and treats it with a defined handler.\n","line":"75"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RouteServer","refId":"server/RouteServer"}]},"id":"run0()","name":"run","kind":"method","comment":"\nCreates a HTTP server by listening to the specified address and port.\n","line":"80"},{"id":"close0()","name":"close","kind":"method","comment":"\nCloses the HTTP server and closes all routes.\n","line":"85"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isRunning","name":"isRunning","kind":"property","line":"34"},{"ref":{"name":"HttpServer","refId":"dart.io/HttpServer"},"id":"httpServer","name":"httpServer","kind":"variable","line":"30"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"address","name":"address","kind":"variable","line":"31"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"port","name":"port","kind":"variable","line":"32"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"backlog","name":"backlog","kind":"variable","line":"33"},{"ref":{"name":"NotFoundHandler","refId":"server/NotFoundHandler"},"id":"notFoundHandler","name":"notFoundHandler","kind":"variable","line":"35"},{"id":"RouteServer3()","name":"RouteServer","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"'127.0.0.1'","isOptional":true,"id":"address","name":"address","kind":"param"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"id":"port","name":"port","kind":"param"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"id":"backlog","name":"backlog","kind":"param"}],"kind":"constructor","line":"37"}],"kind":"class","comment":"\nA HTTP server wrapper that routes request.\n\nThis wrapper allows you to specify routes and handlers for this routes before the server is even created. All the\nroutes are stored to be used later, when the server is running.\n\nIt can be used as the following code:\n\n    RouteServer server = new RouteServer('127.0.0.1', 7070, 0);\n    server\n      ..get('/foo').listen((Request req) => req.response.send('Hello, Route!'))\n      ..post('/bar', (Request req, Response res) => res.send('Hello, Dartisans!'));\n\n    server.run().then((RouteServer srv) => print('Route is running!'));\n\n","line":"29"},{"returnType":{"name":"void","refId":"void"},"id":"NotFoundHandler","name":"NotFoundHandler","children":[{"ref":{"name":"Request","refId":"request/Request"},"id":"request","name":"request","kind":"param"},{"ref":{"name":"Response","refId":"request/Response"},"id":"response","name":"response","kind":"param"}],"kind":"typedef","line":"11"}],"uri":"Route/lib/src/server.dart","kind":"library","line":"1"}